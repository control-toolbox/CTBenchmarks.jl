name: Benchmark Minimal

on:
  workflow_call:

permissions:
  contents: write
  pull-requests: write

jobs:
  run-benchmark-minimal:
    runs-on: ubuntu-latest
    timeout-minutes: 45

    steps:
      # ---------------------------
      # Checkout Repository
      # ---------------------------
      - name: Checkout repository
        uses: actions/checkout@v5
        with:
          fetch-depth: 0

      # ---------------------------
      # Setup Julia Environment
      # ---------------------------
      - uses: julia-actions/setup-julia@v1
        with:
          version: '1.11'

      - uses: julia-actions/cache@v2

      - uses: julia-actions/julia-buildpkg@v1
        with:
          ignore-no-cache: true

      # ---------------------------
      # Run Minimal Benchmark
      # ---------------------------
      - name: Run minimal benchmark
        id: benchmark
        timeout-minutes: 30
        run: |
          julia --color=yes -e '
            using Pkg, CTBenchmarks
            Pkg.activate(".")
            Pkg.instantiate()
            out = CTBenchmarks.benchmark_minimal()
            println(out)
            open("benchmark_output.txt", "w") do f
              write(f, string(out))
            end
          '
          echo "benchmark_success=true" >> $GITHUB_OUTPUT

      # ---------------------------
      # Commit benchmark results
      # ---------------------------
      - name: Commit benchmark results to branch
        if: steps.benchmark.outputs.benchmark_success == 'true'
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"

          # Ensure we are on the PR branch
          git checkout -B auto-benchmark-minimal

          # Add the benchmark JSON
          git add benchmarks/minimal.json

          # Commit only if there are changes
          if ! git diff --cached --quiet; then
            git commit -m "📊 Update minimal benchmark results [skip ci]"
            git push --set-upstream origin auto-benchmark-minimal
            echo "✅ Benchmark results committed and pushed"
          else
            echo "ℹ️ No changes in benchmark results, nothing to commit"
          fi

      # ---------------------------
      # Check for Existing PR
      # ---------------------------
      - name: Check for existing PR
        id: check-pr
        if: steps.benchmark.outputs.benchmark_success == 'true'
        run: |
          EXISTING_PR=$(gh pr list --head auto-benchmark-minimal --json number --jq '.[0].number // empty')
          if [ -n "$EXISTING_PR" ]; then
            echo "existing_pr_number=$EXISTING_PR" >> $GITHUB_OUTPUT
            echo "has_existing_pr=true" >> $GITHUB_OUTPUT
          else
            echo "has_existing_pr=false" >> $GITHUB_OUTPUT
          fi
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # ---------------------------
      # Create or Update Pull Request
      # ---------------------------
      - name: Create or Update Pull Request
        id: cpr
        if: steps.benchmark.outputs.benchmark_success == 'true'
        uses: peter-evans/create-pull-request@v7
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          commit-message: ":stopwatch: Add/update minimal benchmark results"
          title: "[AUTO] Minimal benchmark results"
          body: |
            ## 📊 Automated Benchmark Results
            This PR contains updated minimal benchmark results.
          branch: auto-benchmark-minimal
          base: ${{ github.event.pull_request.base.ref }}
          delete-branch: true
          labels: benchmarks, automated pr, no changelog
