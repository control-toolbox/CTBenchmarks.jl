name: Benchmark Minimal

on:
  workflow_call:

permissions:
  contents: write
  pull-requests: write

jobs:
  run-benchmark-minimal:
    runs-on: ubuntu-latest
    timeout-minutes: 45

    steps:
      # ---------------------------
      # Checkout Repository
      # ---------------------------
      - name: Checkout repository
        uses: actions/checkout@v5
        with:
          fetch-depth: 0  # Needed for full history / PRs

      # ---------------------------
      # Setup Julia Environment
      # ---------------------------
      - name: Setup Julia
        uses: julia-actions/setup-julia@v1
        with:
          version: '1.11'

      - name: Cache Julia packages
        uses: julia-actions/cache@v2

      - name: Build Julia package
        uses: julia-actions/julia-buildpkg@v1
        with:
          ignore-no-cache: true

      # ---------------------------
      # Run Minimal Benchmark
      # ---------------------------
      - name: Run minimal benchmark
        id: benchmark
        timeout-minutes: 30
        run: |
          echo "Starting benchmark execution..."
          julia --color=yes -e '
            using Pkg
            try
              Pkg.activate(".")
              Pkg.instantiate()
              using CTBenchmarks

              out = CTBenchmarks.benchmark_minimal()
              if isnothing(out) || isempty(string(out))
                error("Benchmark returned empty or null result")
              end

              println("‚úÖ Benchmark completed successfully")
              println("üìÑ Benchmark written to: ", out)

              # Save output path for later steps
              open("benchmark_output.txt", "w") do f
                write(f, string(out))
              end
            catch e
              println("‚ùå ERROR: Benchmark failed:")
              showerror(stdout, e)
              exit(1)
            end
          '
          echo "benchmark_success=true" >> $GITHUB_OUTPUT

      # ---------------------------
      # Validate Benchmark Output
      # ---------------------------
      - name: Validate benchmark output
        if: steps.benchmark.outputs.benchmark_success == 'true'
        run: |
          if [ ! -f "benchmark_output.txt" ]; then
            echo "‚ùå Benchmark output file not found"
            exit 1
          fi

          OUTPUT_PATH=$(cat benchmark_output.txt)
          if [ ! -f "$OUTPUT_PATH" ]; then
            echo "‚ùå Benchmark result file does not exist: $OUTPUT_PATH"
            exit 1
          fi

          if [ ! -s "$OUTPUT_PATH" ]; then
            echo "‚ùå Benchmark result file is empty: $OUTPUT_PATH"
            exit 1
          fi

          echo "‚úÖ Benchmark output validation passed"
          echo "üìä Result file: $OUTPUT_PATH ($(wc -l < "$OUTPUT_PATH") lines)"

      # ---------------------------
      # Upload Benchmark Artifact
      # ---------------------------
      - name: Upload benchmark artifact
        if: steps.benchmark.outputs.benchmark_success == 'true'
        uses: actions/upload-artifact@v4
        with:
          name: benchmark-minimal
          path: benchmarks/minimal.json
          if-no-files-found: error

      # ---------------------------
      # Check for Existing PR
      # ---------------------------
      - name: Check for existing PR
        id: check-pr
        if: steps.benchmark.outputs.benchmark_success == 'true'
        run: |
          EXISTING_PR=$(gh pr list --head auto-benchmark-minimal --json number --jq '.[0].number // empty')
          if [ -n "$EXISTING_PR" ]; then
            echo "existing_pr_number=$EXISTING_PR" >> $GITHUB_OUTPUT
            echo "has_existing_pr=true" >> $GITHUB_OUTPUT
            echo "üîÑ Found existing PR #$EXISTING_PR"
          else
            echo "has_existing_pr=false" >> $GITHUB_OUTPUT
            echo "üìù No existing PR found, will create new one"
          fi
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # ---------------------------
      # Create or Update Pull Request
      # ---------------------------
      - name: Create or Update Pull Request
        id: cpr
        if: steps.benchmark.outputs.benchmark_success == 'true'
        uses: peter-evans/create-pull-request@v7
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          commit-message: ":stopwatch: Add/update minimal benchmark results"
          title: "[AUTO] Minimal benchmark results"
          body: |
            ## üìä Automated Benchmark Results

            This PR contains updated minimal benchmark results.

            ### Details
            - **Triggered by**: ${{ github.event_name }}
            - **Source branch/PR**: ${{ github.head_ref || github.ref_name }}
            - **Commit**: ${{ github.sha }}
            - **Run ID**: [${{ github.run_id }}](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }})

            ### Files Changed
            The benchmark results have been updated with the latest performance metrics.

            ---
            *This PR was automatically generated by the benchmark workflow.*
          branch: auto-benchmark-minimal
          base: ${{ github.event.pull_request.base.ref }}  # FIX: explicitly specify target branch
          delete-branch: true
          labels: benchmarks, automated pr, no changelog

      # ---------------------------
      # Report Results
      # ---------------------------
      - name: Report results
        if: always()
        run: |
          echo "## üìä Benchmark Workflow Summary"

          if [ "${{ steps.benchmark.outputs.benchmark_success }}" == "true" ]; then
            echo "‚úÖ Benchmark execution: SUCCESS"

            if [ "${{ steps.cpr.outputs.pull-request-number }}" != "" ]; then
              echo "‚úÖ Pull Request: CREATED/UPDATED"
              echo "   - Number: ${{ steps.cpr.outputs.pull-request-number }}"
              echo "   - URL: ${{ steps.cpr.outputs.pull-request-url }}"

              if [ "${{ steps.check-pr.outputs.has_existing_pr }}" == "true" ]; then
                echo "   - Type: Updated existing PR #${{ steps.check-pr.outputs.existing_pr_number }}"
              else
                echo "   - Type: New PR created"
              fi
            else
              echo "‚ÑπÔ∏è  Pull Request: NO CHANGES DETECTED"
            fi
          else
            echo "‚ùå Benchmark execution: FAILED"
            exit 1
          fi
